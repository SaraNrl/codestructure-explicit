<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="booleanReturnPart1" xmlns:xi="http://www.w3.org/2001/XInclude">


  <title>Rule 2) Directly return boolean expressions </title>
  <p>
  Please watch the video to learn the second rule and answer the following checkpoint question.
  </p>
  <figure>
    <caption>Directly return boolean expressions part 1</caption>
    <video xml:id="booleanReturn1" youtube="VsGO8hKNa5A" width="90%" margins="5% 5%" preview="booleanReturn-part1"/>
  </figure>
 
 
 
 <exercise label="exp-BooleanReturn-fillinAreEqualStrings">

    <statement>
      <p> Fill in the blank line of code, so that the function areStringsEqual() takes two string of str1 and str2. When <term role="bold"> the two strings are the same </term> it returns true and returns false otherwise.  
       </p>
    
		<program language="java" >
		  <input>
				public static boolean areStringsEqual(String str1, String str2) {   
				   return .......Blank......... ; 
				}
		  </input>
		</program>

   
      <p>
         Write your responses here:
      </p>
    </statement>
	<statement>
		<p>Blank: <var width="45"/></p>
	</statement>
	 <setup>
          	<var>
		        <condition case="sensitive" string="\s*str1\s*\.equals\s*\(\s*str2\s*\)\s*|\s*str2\s*\.equals\s*\(\s*str1\s*\)\s*">
		          <feedback>
					<p>Correct.</p>
						  </feedback>
						</condition>

						<condition case="insensitive" string=" *str1 *== *str2 *">
						  <feedback>
					<p>Try Again! To compare strings you should use equals() function instead of "==". </p>
						  </feedback>
						</condition>
						<condition case="insensitive" string=" *str1\.equal\( *str2 *\) *">
						  <feedback>
					<p>Try Again! You should use equals() instead of equal().</p>
						  </feedback>
						</condition>
						<condition string=".*">
						  <feedback>
					<p>Try again!</p>
		          </feedback>
		        </condition>
          </var>
	  
	  
	  </setup>
  </exercise>
 
 






</section>


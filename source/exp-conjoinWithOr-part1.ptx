<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="ConjoinWithOrPart1" xmlns:xi="http://www.w3.org/2001/XInclude">


  <title>Rule 1) Conjoining Conditions </title>
  <p>
  Please watch the video to learn when to conjoin conditions with || and then answer the following questions. 
  </p>
  <figure>
    <caption>Conjoining conditions with <c>||</c> part 1</caption>
    <video xml:id="conjoinWithOr1" youtube="q1nCbQieB00" width="90%" margins="5% 5%" preview="conjoinWithOr-part1" />
  </figure>
 
 
 
 
 
<activity label="exp-conjoinWithOr-comprehensionPrint1">
  <statement>
    <p>
     Consider the following Java function. What happens when the function is called with the given inputs <c>print(2, 0, 0);</c>?
    </p>
    <program language="java">
      <input>
      
public static void print(int x, int y, int z) {
    if (x > 10 || x / y > 10 || z > 10) {
        System.out.println("Condition met");
    }
    System.out.println("End of program");
}
      </input>  
    </program>
  </statement>
  
  <choices>
    <choice correct="no">
      <statement> 
        <p>The code first prints "Condition met" and then prints "End of program" </p>
      </statement> 
       <feedback>
      Think about what you learned for short circuit evaluation from the video
      </feedback>
    </choice>
  
    <choice correct="no">
      <statement> 
        The code only prints "End of program" 
      </statement>
     <feedback>
      Think about what you learned for short circuit evaluation from the video
      </feedback>
    </choice>
    
    <choice correct="yes">
      <statement> 
        <p>The code throws an error for division by zero</p>
      </statement> 
      <feedback>
      The first condition is false, therefore the program checks the second condition and throws an exception. 
      </feedback>
    </choice>
    
  </choices>
</activity>

<activity label="exp-conjoinWithOr-comprehensionPrint2">
  <statement>
    <p>
      What happens when the function is called with these new inputs <c>print(12, 0, 20);</c>?
    </p>
  </statement>

  <choices>
    <choice correct="yes">
      <statement> 
        <p>The code first prints "Condition met" and then prints "End of program" </p>
      </statement>
       <feedback>
      Correct! The first condition is true, the program doesn't bother checking the rest of the conjoined conditions and considers the whole as true.  
      </feedback> 
    </choice>
    
    <choice correct="no">
      <statement> 
        The code only prints "End of program" 
      </statement>
       <feedback>
     The body of the if statement has a print statement, so the execution continues and the last line will also be printed.
      </feedback>
    </choice>
    
    <choice correct="no">
      <statement> 
        <p>The code throws an error for division by zero</p>
      </statement> 
      <feedback> Due to short circuit evaluation when the first condition is true, the whole condition evaluates to true and the code doesn't even check the rest of the conjoined conditions. 
      </feedback>
    </choice>
  </choices>
</activity>







</section>


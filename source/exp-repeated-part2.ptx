<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="uniqueRepeatedPart2" xmlns:xi="http://www.w3.org/2001/XInclude">


  <title>Rule 3) Remove repeated code and logic from conditional branches </title>
  <p>
  Continue watching to learn about the third rule and answer the following question. 
  </p>
  <figure>
    <caption>Remove repeated code from branches part 2</caption>
    <video xml:id="uniqueRepeated2" youtube="xMxUu1OENz0" width="90%" margins="5% 5%" preview="uniqueRepeated-part2"/>
  </figure>
 
 
 <p>Click on the checkpoint and answer the question.</p>
  <exercise label="exp-unique-fillinPrintProductStatus">
      	
      	<statement>
      <p>
 Improve the style of <c>printProductStatus()</c>. The original function is below, followed by a version with two blanks. Fill in the blanks so that the original functionality is preserved, but the code is easier to maintain.
     </p>
    </statement>

     <statement>
		<program  language="java">
		    <input>
	public void printProductStatus(int quantity) {
		String status = "";
    
		if (quantity > 100) {
    	    status = "High Stock";
    	    System.out.println("Status: " + status);
		} else if (quantity > 0) {
    	    status = "In Stock";
    	    System.out.println("Status: " + status);
		} else {
    	    status = "Out of Stock";
    	    System.out.println("Status: " + status);
		}
	}



		    </input>
		</program>
	</statement>
	<statement>
		<program language="java">
		    <input>
public void printProductStatus(int quantity) {
    String status = ""; 

    if (quantity > 100) {
        status = "High Stock";
    } else if (quantity > 0) {
        status = "In Stock";
    } else {
    	status = "-----Blank1-----";
    }

    System.out.println(------Blank2-----);
}



		    </input>
		</program>
	</statement>
	
    <statement>
      <p>
       Put your responses here:
      </p>
    </statement>
	<statement>
		<p>Blank 1: <var width="25"/></p>
		<p>Blank 2: <var width="25"/></p>
	</statement>

      <setup>
          	<var>
		        <condition case="insensitive" string="/s*out of stock/s*">
		          <feedback>
					<p>Correct! We could initialize status with "Out of stock" instead of an empty string, and then we would not need the else block.</p>
						  </feedback>
						</condition>
						<condition string=".*">
						  <feedback>
					<p>Try again!</p>
		          </feedback>
		        </condition>
          </var>
	  <var>
            <condition case="insensitive" string=" *&quot;Status: *&quot; *\+ *status *">
              <feedback>
				<p>Correct.</p>
				      </feedback>
				    </condition>
				
				    <condition string=".*">
				      <feedback>
				<p>Try again!</p>
              </feedback>
            </condition>
            
          </var>
		 
	  
      </setup>
     
     
    
      
    </exercise>
 
 






</section>

